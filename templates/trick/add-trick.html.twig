{% extends './base.html.twig' %}
{% block title %}Ajouter une figures{% endblock %}
{% block stylesheets %}{{ parent() }}{% endblock %}


 {% block main %}
<!-- Modal -->
<div class = "row d-flex justify-content-center">
 <!-- Background image -->
<div class="bg-image opacity-75">
<div class="bloc-title-home-page">
<h1 class = "h1 d-flex justify-content-center text-center text-primary">Ajouter une figures</h1>
</div>
</div>
<!-- add form-->
 <div class="row container col-md-10 col-md-offset-1 mt-5 mb-4 shadow p-3 mb-5 bg-body rounded">
  <h1>Cr√©er un nouveau trick :</h1>
    {{ form_start(form) }}
    <div class="row">
    <div class="col">{{ form_row(form.name) }}</div>
    <div class="col">{{ form_row(form.category) }}</div>
    </div>
    <div class = "mb-3">
    <ul class="videos list-unstyled border border-info rounded"  data-index="{{ form.videos|length > 0 ? form.videos|last.vars.name + 1 : 0 }}" data-prototype="{{ form_widget(form.videos.vars.prototype)|e('html_attr') }}">
    </ul>
    <button type="button" class="add_item_link btn-info rounded text-light p-1" data-collection-holder-class="videos">Ajouter lien des videos</button>
    </div>

    <div class = "mb-3">
    <ul class="images list-unstyled border border-info rounded"  data-index="{{ form.images|length > 0 ? form.images|last.vars.name + 1 : 0 }}" data-prototype="{{ form_widget(form.images.vars.prototype)|e('html_attr') }}">
    </ul>
    <button type="button" class="add_item_img btn-info rounded text-light p-1" data-collection-holder-class="images">Ajouter des images</button>
    </div>
     {{ form_rest(form) }}
     {{ form_end(form) }}
 </div>
 </div>
{% endblock %}
{% block javascripts %}
 <script>
 
 const addFormToCollection = (e) => {
  const collectionHolder = document.querySelector('.' + e.currentTarget.dataset.collectionHolderClass);

  const item = document.createElement('li');
  item.className ="border p-2 m-2";
  item.innerHTML = collectionHolder
    .dataset
    .prototype
    .replace(
      /__name__/g,
      collectionHolder.dataset.index
    );

  collectionHolder.appendChild(item);

  collectionHolder.dataset.index++;
  
  // add a delete link to the new form
    addTagFormDeleteLink(item);
};

const addTagFormDeleteLink = (item) => {
    const removeFormButton = document.createElement('button');
    removeFormButton.classList.add('btn-danger')
    removeFormButton.classList.add('rounded')
    removeFormButton.classList.add('text-light')
    removeFormButton.innerText = 'Suprimer';

    item.append(removeFormButton);

    removeFormButton.addEventListener('click', (e) => {
        e.preventDefault();
        // remove the li for the tag form
        item.remove();
    });
}
 
 document
  .querySelectorAll('.add_item_link')
  .forEach(btn => {
      btn.addEventListener("click", addFormToCollection)
  });

  document
  .querySelectorAll('.add_item_img')
  .forEach(btn => {
      btn.addEventListener("click", addFormToCollection)
  });
  
    document
    .querySelectorAll('ul.images li')
    .forEach((tag) => {
        addTagFormDeleteLink(tag)
    })

  document
    .querySelectorAll('ul.videos li')
    .forEach((tag) => {
        addTagFormDeleteLink(tag)
    })
    


 </script>
{% endblock %}